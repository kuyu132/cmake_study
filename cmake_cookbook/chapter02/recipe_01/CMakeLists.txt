cmake_minimum_required(VERSION 3.27)
project(recipe_01)

set(CMAKE_CXX_STANDARD 17)

#不同的平台
if (CMAKE_SYSTEM_NAME STREQUAL "Linux")
    message(STATUS "Configuring on/for Linux")
elseif (CMAKE_SYSTEM_NAME STREQUAL "Darwin")
    message(STATUS "Configuring on/for MacOS")
elseif (CMAKE_SYSTEM_NAME STREQUAL "Windows")
    message(STATUS "Configuring on/for Windows")
elseif (CMAKE_SYSTEM_NAME STREQUAL "AIX")
    message(STATUS "Configuring on/for IBM AIX")
else()
    message(STATUS "Configuring on/for ${CMAKE_SYSTEM_NAME}")
endif ()

add_executable(recipe_01 main.cpp)

if (CMAKE_SYSTEM_NAME STREQUAL "Linux")
    target_compile_definitions(recipe_01 PUBLIC "IS_LINUX")
elseif (CMAKE_SYSTEM_NAME STREQUAL "Darwin")
    target_compile_definitions(recipe_01 PUBLIC "IS_MACOS")
elseif (CMAKE_SYSTEM_NAME STREQUAL "Windows")
    target_compile_definitions(recipe_01 PUBLIC "IS_WINDOWS")
elseif (CMAKE_SYSTEM_NAME STREQUAL "AIX")
    target_compile_definitions(recipe_01 PUBLIC "IS_AIX")
endif ()

if (CMAKE_CXX_COMPILER_ID MATCHES Intel)
    target_compile_definitions(recipe_01 PUBLIC "IS_INTEL_CXX_COMPILER")
endif ()
if (CMAKE_CXX_COMPILER_ID MATCHES GNU)
    target_compile_definitions(recipe_01 PUBLIC "IS_GNU_CXX_COMPILER")
endif ()
if (CMAKE_CXX_COMPILER_ID MATCHES PGI)
    target_compile_definitions(recipe_01 PUBLIC "IS_PGI_CXX_COMPILER")
endif ()
if (CMAKE_CXX_COMPILER_ID MATCHES AppleClang)
    target_compile_definitions(recipe_01 PUBLIC "IS_APPLECLANG_CXX_COMPILER")
endif ()
message(STATUS "CMAKE_CXX_COMPILER_ID is ${CMAKE_CXX_COMPILER_ID}")